- name: Creating node_exporter user group
  group: name="{{groupId}}"
  become: true


- name: Creating node_exporter user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Creating the directory
  file:
    state: directory
    path: "/opt/Prometheus/exporters"
    mode: '0755'
    group: "{{ groupId }}"
    owner: "{{ userId }}"


- name: Install prometheus node exporter
  unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ version }}/node_exporter-{{ version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: Copy prometheus node exporter file to /opt/Prometheus/exporters
  copy:
    src: "/tmp/node_exporter-{{ version }}.linux-amd64/node_exporter"
    dest: "/opt/Prometheus/exporters/node_exporter"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: 0755

- name: Creating the soft link to node_exporter in /usr/bin
  file:
    src: "/opt/Prometheus/exporters/node_exporter"
    dest: "/usr/bin/node_exporter"
    state: link
    owner: "{{userId}}"
    group: "{{groupId}}"

- name: Delete node exporter tmp folder
  file:
    path: '/tmp/node_exporter-{{ version }}.linux-amd64'
    state: absent

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/node_exporter.service

- name: Start node_exporter service
  service:
    name: node_exporter
    state: started
    enabled: yes

- name: Adding the firewall rule
  firewalld:
    port: "9100/tcp"
    state: enabled
    permanent: yes
    immediate: yes


- name: Check if node exporter emits metrices
  uri:
    url: http://127.0.0.1:9100/metrics
    method: GET
    status_code: 200